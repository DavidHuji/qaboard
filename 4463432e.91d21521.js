(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=s(n),p=r,f=l["".concat(o,".").concat(p)]||l[p]||b[p]||i;return n?a.a.createElement(f,c(c({ref:t},d),{},{components:n})):a.a.createElement(f,c({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var d=2;d<i;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},109:function(e,t,n){"use strict";var r=n(0),a=n(18);t.a=function(){var e=Object(r.useContext)(a.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},110:function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var r=n(109),a=n(111);function i(){var e=Object(r.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,o=i.forcePrependBaseUrl,c=void 0!==o&&o,u=i.absolute,d=void 0!==u&&u;if(!n)return n;if(n.startsWith("#"))return n;if(Object(a.b)(n))return n;if(c)return t+n;var s=!n.startsWith(t)?t+n.replace(/^\//,""):n;return d?e+s:s}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},111:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}))},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),i=(n(0),n(108)),o=n(110),c={id:"tuning-from-the-webapp",sidebar_label:"Tuning from QA-Board",title:"Starting tuning experiments from QA-Board"},u={unversionedId:"tuning-from-the-webapp",id:"tuning-from-the-webapp",isDocsHomePage:!1,title:"Starting tuning experiments from QA-Board",description:"How to do tuning or trigger extra runs from QA-Board",source:"@site/docs/tuning-from-the-webapp.md",permalink:"/qaboard/docs/tuning-from-the-webapp",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/tuning-from-the-webapp.md",sidebar_label:"Tuning from QA-Board",sidebar:"docs",previous:{title:"References & Milestones",permalink:"/qaboard/docs/references-and-milestones"},next:{title:"Using celery as a task runner",permalink:"/qaboard/docs/celery-integration"}},d=[{value:"How to do tuning or trigger extra runs from QA-Board",id:"how-to-do-tuning-or-trigger-extra-runs-from-qa-board",children:[]},{value:"Enabling tuning from QA-Board",id:"enabling-tuning-from-qa-board",children:[{value:"1. Handling tuning parameters",id:"1-handling-tuning-parameters",children:[]},{value:"2. Build artifacts",id:"2-build-artifacts",children:[]},{value:"3. Distributed task queue",id:"3-distributed-task-queue",children:[]}]}],s={rightToc:d};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"how-to-do-tuning-or-trigger-extra-runs-from-qa-board"},"How to do tuning or trigger extra runs from QA-Board"),Object(i.b)("p",null,"When doing QA or during development, you often want to run the code/configs from a given commit on new tests. QA-Board lets you define and runs batches of tests with extra tuning parameters:"),Object(i.b)("img",{alt:"Tuning from the UI",src:Object(o.a)("img/tuning-from-the-ui.jpg")}),Object(i.b)("h2",{id:"enabling-tuning-from-qa-board"},"Enabling tuning from QA-Board"),Object(i.b)("h3",{id:"1-handling-tuning-parameters"},"1. Handling tuning parameters"),Object(i.b)("p",null,"You entrypint's ",Object(i.b)("inlineCode",{parentName:"p"},"run()")," function should do something with ",Object(i.b)("inlineCode",{parentName:"p"},"context.obj['extra_parameters']"),". It's a regular python ",Object(i.b)("inlineCode",{parentName:"p"},"dict")," with ",Object(i.b)("inlineCode",{parentName:"p"},'{"tuning_key": value}'),". Ideally, just treat as you would do for an element in ",Object(i.b)("inlineCode",{parentName:"p"},"context.obj['configurations']"),"."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"We'll likely improve the API: in the future we'll provide ",Object(i.b)("inlineCode",{parentName:"p"},"context.obj['configurations']"),' with the "tuning on top", and ',Object(i.b)("inlineCode",{parentName:"p"},"context.obj['parameters']")," with all the key-value items in all the configurations, deep-merged."))),Object(i.b)("h3",{id:"2-build-artifacts"},"2. Build artifacts"),Object(i.b)("p",null,"You must have defined and be using ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/storage/artifacts"}),"artifacts")),Object(i.b)("h3",{id:"3-distributed-task-queue"},"3. Distributed task queue"),Object(i.b)("p",null,"You need to configure a task runner, that will execute tuning runs asynchronously. We recommend getting started with Celery. All the details are on the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"celery-integration"}),"next page"),"!"))}l.isMDXComponent=!0}}]);