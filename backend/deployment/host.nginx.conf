// webdav
// sudo apt-get install nginx nginx-full


server {
    listen 5000;
    listen [::]:5000 ipv6only=on;
    server_name qa, dvs, gpu09-dt, planet31, planet33, localhost, 106.199.20.32;

    # Redirect human users to the new hostname, with HTTPS
    location / {
       return 302 http://qa$request_uri;
    }

    # Until all servers trust our certificate authority, we forward API HTTP requests to the server's HTTP endpoint.
    location ~ ^/api/(.*) {
       proxy_pass http://127.0.0.1:5001;
    }
    # Until all servers trust our certificate authority, we forward API HTTP requests to the server's HTTP endpoint.
    location ~ ^/webhook/(.*) {
       proxy_pass http://127.0.0.1:5001;
    }
    location ~ ^/davs/(.*) {
       proxy_pass http://127.0.0.1:5001;
    }

}

# Redirect HTTP connections to HTTPS
server {
    listen 80;
    listen [::]:80 ipv6only=on;
    server_name qa, dvs, gpu09-dt, planet31, planet33, localhost, 106.199.20.32;
    return 302 https://qa$request_uri;
}


# For the cantaloupe server we terminate here the TLS connection
# and forward HTTP-only traffic to the server
server {
  listen 8183 ssl http2;
  listen [::]:8183 ssl http2;
  server_name qa, localhost, 106.199.20.32;

  ssl_certificate_key /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.key;
  ssl_certificate /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.pem;

  location / {
      # add_header 'Access-Control-Allow-Origin' '*' always;
      # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      # add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      if ($request_method = POST) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }
      if ($request_method = GET) {
        # add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }
      # Preflighted requests
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  '*' always;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        return 204;
      }
      # if ($request_uri ~* "/(.*)") {
      #     proxy_pass http://127.0.0.1:8182/$1;
      # }
      proxy_pass http://127.0.0.1:8182$request_uri;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Path /;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_redirect http://127.0.0.1:8182/ /;


      if ($request_method = POST) {
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-W$
        # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Rang$
      }
      if ($request_method = GET) {
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-W$
        # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Rang$
      }
      # Preflighted requests
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  '*' always;
        # add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-W$
        return 204;
      }


  }
}

server {
  listen 8186 ssl http2;
  listen [::]:8186 ssl http2;
  server_name qa, dvs, gpu09-dt, planet31, planet33, localhost, 106.199.20.32;

  ssl_certificate_key /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.key;
  ssl_certificate /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.pem;

  location / {
      if ($request_uri ~* "/(.*)") {
          proxy_pass http://127.0.0.1:8185/$1;
      }
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Path /;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect http://127.0.0.1:8185/ /;




  }
}

server {
  listen 80;
  listen [::]:80;
  server_name qa-docs;

  ssl_certificate_key /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.key;
  ssl_certificate /home/arthurf/qaboard/backend/deployment/nginx/ssl/dvs/dvs.pem;

  location / {
    root /home/arthurf/qaboard/website/build;
    try_files $uri $uri/index.html $uri.html /index.html;
  }
}
