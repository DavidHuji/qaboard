# https://uwsgi-docs.readthedocs.io/en/latest/ThingsToKnow.html
# https://pythonise.com/series/learning-flask/python-flask-uwsgi-introduction
# https://uwsgi-docs.readthedocs.io/en/latest/ConfigLogic.html
# https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/

[uwsgi]
; FIXME: why do we need this? it complained about "listen" from the CLI not being OK...
; strict = true

protocol = uwsgi

master = true
module = backend:app
need-app = true

processes = 1
if-env = UWSGI_PROCESSES
processes = $(UWSGI_PROCESSES)
endif =

; https://uwsgi-docs.readthedocs.io/en/latest/Cheaper.html#:~:text=To%20enable%20cheaper%20mode%20add,(%20workers%20or%20processes%20option).
if-env = UWSGI_CHEAPER_ALGO_BUSYNESS
cheaper-algo = busyness
processes = 64                      ; Maximum number of workers allowed
cheaper = $(UWSGI_CHEAPER)          ; Minimum number of workers allowed
cheaper-initial = $(UWSGI_CHEAPER_INITIAL)                 ; Workers created at startup
cheaper-overload = 1                 ; Length of a cycle in seconds
cheaper-step = 16                    ; How many workers to spawn at a time
cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above thiss threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergegency workers to create if there are too many requests in the queue
endif =

if-env = UWSGI_UID
uid = %(_)
endif =
if-env = UWSGI_GID
gid = uucp
endif =

# we need to increase it a bit from the 4096 default
# https://stackoverflow.com/questions/15878176/uwsgi-invalid-request-block-size
buffer-size=32768

# use a port
socket = :3000
chmod-socket = 666
# removes the socket when the process stops
vacuum = true
# well-behaved when running with an init system like systemd
die-on-term = true

# if ever need threads
# enable-threads = true
py-call-osafterfork = true


if-env = UWSGI_STATS
memory-report = true
stats = /tmp/stats.sock
# we could also do...
# stats = 127.0.0.1:3001
endif =

single-interpreter = true

# timeout to kill requests
harakiri = 300
