(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{140:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var o=n(1),r=n(9),a=(n(0),n(167)),i={id:"tuning-workflows",sidebar_label:"Tuning Workflows",title:"Various Tuning Workflows"},l={id:"tuning-workflows",title:"Various Tuning Workflows",description:"## Enabling tuning from QA-Board\r",source:"@site/docs/tuning-workflows.md",permalink:"/qaboard/docs/tuning-workflows",editUrl:"http://gitlab-srv/common-infrastructure/qatools/edit/master/website/docs/tuning-workflows.md",sidebar_label:"Tuning Workflows",sidebar:"docs",previous:{title:"QA-Board's API",permalink:"/qaboard/docs/apis"},next:{title:"Integrating qatools with your CI",permalink:"/qaboard/docs/ci-integration"}},c=[{value:"Enabling tuning from QA-Board",id:"enabling-tuning-from-qa-board",children:[]},{value:"Tuning from QA-Board",id:"tuning-from-qa-board",children:[]},{value:"Investigating results/configs you see in the UI",id:"investigating-resultsconfigs-you-see-in-the-ui",children:[]},{value:"Workflows used for Tuning",id:"workflows-used-for-tuning",children:[{value:"<strong>Local</strong> Workflow",id:"local-workflow",children:[]},{value:"<strong>Local configs > SharedStorage > Tuning from QA-Board</strong> Workflow",id:"local-configs--sharedstorage--tuning-from-qa-board-workflow",children:[]},{value:"<strong>Local > QA-Board</strong> Workflow",id:"local--qa-board-workflow",children:[]},{value:"<strong>Commit > CI > QA-Board</strong> Qorkflow",id:"commit--ci--qa-board-qorkflow",children:[]}]}],s={rightToc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"enabling-tuning-from-qa-board"},"Enabling tuning from QA-Board"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"Define artifacts:"),' you must define the "artifacts" needed to run your software. Besides the source, you might need compiled binaries, configurations, trained networks, etc. Artifacts are defined in ',Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/Samsung/qaboard/blob/master/qatools/sample_project/qatools.yaml#L85"}),"qatools.yaml"),":")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'artifacts:\n  binary:\n    glob: \'build/sample_project\'\n  # The "configurations" artifacts are shown in the UI under the commit\'s "Configuration" tab\n  configurations:\n    glob: configurations/*.json\n')),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"For convenience, ",Object(a.b)("em",{parentName:"p"},".qatools.yaml")," and ",Object(a.b)("em",{parentName:"p"},"qatools/")," are saved automatically.")),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"Save the artifacts")," when your build/training is done. In your CI, you will want to execute:")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"qa save-artifacts\n")),Object(a.b)("h2",{id:"tuning-from-qa-board"},"Tuning from QA-Board"),Object(a.b)("p",null,"When doing QA or during development, you often want to run the code/configs from a given commit on new tests. QA-Board lets you define and runs batches of tests with extra tuning parameters:"),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"/img/tuning-from-the-ui.jpg",alt:"Tuning from the UI"}))),Object(a.b)("h2",{id:"investigating-resultsconfigs-you-see-in-the-ui"},"Investigating results/configs you see in the UI"),Object(a.b)("p",null,"Every time you see an output in the web application, you see what configurations were used, and you can easily open the output directory:"),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"/img/output-windows-dir.jpg",alt:"Copy the Windows output dir"}))),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"/img/winows-explorer-output-dir.jpg",alt:"Output directory from Windows"}))),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The output logs always show you the exact CLI commands that were used, so that reproducing results is only a ",Object(a.b)("inlineCode",{parentName:"p"},"git checkout $revision ; make ; qa run")," away.")),Object(a.b)("h2",{id:"workflows-used-for-tuning"},"Workflows used for Tuning"),Object(a.b)("h3",{id:"local-workflow"},Object(a.b)("strong",{parentName:"h3"},"Local")," Workflow"),Object(a.b)("p",null,"If you already have great development/debugging tools, use them!"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"At SIRC, ",Object(a.b)("inlineCode",{parentName:"li"},"CDE")," provides a great environment to run hardware chains and view images.**"),Object(a.b)("li",{parentName:"ul"},"For deep learning ",Object(a.b)("inlineCode",{parentName:"li"},"tensorboard")," is a great tool to investigate NNs."),Object(a.b)("li",{parentName:"ul"},"Many people love to write one-off ",Object(a.b)("inlineCode",{parentName:"li"},"matlab")," script.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"You can continue to use the existing tools!")),Object(a.b)("p",null,"This said, it's worth having your IDE/debugger/scripts call your code via qatools' CLI. ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"debugging"}),"Here is how to do it"),"."),Object(a.b)("h3",{id:"local-configs--sharedstorage--tuning-from-qa-board-workflow"},Object(a.b)("strong",{parentName:"h3"},"Local configs > SharedStorage > Tuning from QA-Board")," Workflow"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Details: WIP")),Object(a.b)("h3",{id:"local--qa-board-workflow"},Object(a.b)("strong",{parentName:"h3"},"Local > QA-Board")," Workflow"),Object(a.b)("p",null,"QA-Board lets you runs your ",Object(a.b)("em",{parentName:"p"},"local")," code/configurations, and see results in the web application. ",Object(a.b)("strong",{parentName:"p"},"It gives you an easy way to tweak/compile/run your code and compare results across runs:")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"qa --share run [...]\nqa --share --label testing-some-logic-tweaks batch [...]\n")),Object(a.b)("p",null,"Results will appear in a new batch:"),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"/img/selecting-local-runs.jpg",alt:"selecting local runs"})),"\n",Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"/img/local-runs-warning.jpg",alt:"local runs warning"}))),Object(a.b)("h3",{id:"commit--ci--qa-board-qorkflow"},Object(a.b)("strong",{parentName:"h3"},"Commit > CI > QA-Board")," Qorkflow"),Object(a.b)("p",null,"If you make changes in configuration files, you need to commit them.\n1. Make changes\n2. Commit the changes\n3. Push your commit\n4. See results in the UI"))}u.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return g}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=u(n),d=o,g=b["".concat(i,".").concat(d)]||b[d]||p[d]||a;return n?r.a.createElement(g,l({ref:t},s,{components:n})):r.a.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);