# TODO: Replace with a different CI for github.com...
stages:
  - test
  - deploy  # Internally
  - publish # To Pypi

before_script:
  - source .envrc


unit-tests:
  stage: test
  retry: 2 # solves frequent filesystem sync issues
  script:
    - green -vvv
    # - PYTHONPATH=$(pwd) python -munittest

type-check:
  stage: test
  allow_failure: true
  script:
  - mypy -p qaboard --ignore-missing-imports

deploy:qa:
  stage: deploy
  only:
    - master
  script:
    - pip install .


publish:PyPi:
  stage: publish
  when: manual
  script:
  - cd qatools
  - python setup.py sdist bdist_wheel
  - twine upload --verbose -u __token__ dist/*


variables:
  DOCKER_IMAGE: qaboard
  # https://docs.gitlab.com/ee/ci/yaml/#git-clean-flags
  GIT_CLEAN_FLAGS: -ffdx --exclude=qaboard-webapp/node_modules/

# CI for the web application and the backend
# TODO: enable it, make it work...
# backend:tests:
#   stage: test
#   script:
#   - cd backend
#   # we only check that the syntax is correct
#   - pip install .
# webapp:tests:
#   stage: test
#   script:
#     - cd webapp
#     - npm ci
#     # - npm test


# we deploy to the "qa" host.
# Internally we need to deal with proxy issues, tcsh as default shell, etc...
.deploy: &deploy
  stage: deploy
  script:
    - cd webapp  && ssh qa "bash -c 'cd $(pwd) && source ../.envrc && npm install --no-audit && GENERATE_SOURCEMAP=true npm run build'" && cd ..
    - cd webapp  &&                               rsync -r build/* /home/ispq/qaboard/webapp_builds && cd ..
    - ssh qa "bash -c \"cd $(pwd) && source .envrc && docker build --ssh default -m 12g --tag $DOCKER_IMAGE:$CI_ENVIRONMENT_SLUG .\""
    - ssh qa "docker stop qaboard-$CI_ENVIRONMENT_SLUG; docker rm qaboard-$CI_ENVIRONMENT_SLUG" || true
    - ssh qa "bash -c \"cd $(pwd) && source .envrc && CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG $(pwd)/backend/deployment/start-docker.sh\""

deploy:production:
  <<: *deploy
  environment:
    name: production
    url: https://qa
  only:
  - master
  when: manual

deploy:staging:
  <<: *deploy
  environment:
    name: staging
    url: http://qa:9000
  only:
  - master
