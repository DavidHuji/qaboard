upstream backend {
    server backend:3000;
}
upstream cantaloupe {
    server cantaloupe:8182;
}




server {
  server_name qaboard; # _ is the usual catch-all placeholder name
  listen 80 default_server;
  listen [::]:80 ipv6only=on;

  # otherwise accessing qa/s/folder will redirect to qa:whatever/s/folder/
  # https://serverfault.com/questions/905657/nginx-redirects-to-http-after-port-in-redirect-off/905740
  absolute_redirect off;

  location /docs {
    alias /docs/;
    try_files $uri $uri/index.html $uri.html /index.html;
  }

  location / {
    root /builds;
    try_files $uri $uri/index.html $uri.html /index.html;
  }

  # we disabled service workers to cache the app
  # location ~* (service-worker\.js)$ {
  #   add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
  #   expires off;
  #   proxy_no_cache 1;
  #   root /builds;
  #   try_files $uri $uri/index.html $uri.html /index.html;
  # }

  # location ~* \.(?:css|js)$ {
  #   expires 1y;
  #   access_log off;
  #   add_header Cache-Control "public";
  #   root /builds;
  #   try_files $uri $uri/index.html $uri.html /index.html;
  # }

  location ^~ /api {
    include uwsgi_params;
    uwsgi_pass backend;
    uwsgi_read_timeout 300;
    include cors;
  }
  location ^~ /webhook {
    include uwsgi_params;
    uwsgi_pass backend;
    include cors;
  }

  # If you use other locations, add other similar location blocks 
  location ^~ /s/mnt/qaboard/ {
    alias /mnt/qaboard/; 
    autoindex on;
    access_log off;
    include cors;
    # let users save precompressed $file.gz
    # using "gzip $file" or https://github.com/google/zopfli
    gzip_static  on;
    # https://stackoverflow.com/questions/33375304/what-are-the-options-for-the-gzip-proxied-directive-for
    # gzip_proxied expired no-cache no-store private auth;
    # for clients that don't support gzip if only that version is available
    gunzip       on;
  }

  # IIIF Cantaloupe Server
  location /iiif/ {
      include cors;
      proxy_pass http://cantaloupe$request_uri;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Forwarded-Path /;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  '*' always;
        return 204;
      }
  }

  # https://flower.readthedocs.io/en/latest/reverse-proxy.html
  location /flower/ {
      proxy_pass http://flower:8888/flower/;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }

}
