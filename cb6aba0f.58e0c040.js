(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{173:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(9),o=(n(0),n(183)),i={id:"alternatives-and-missing-features",sidebar_label:"Alternatives",title:"Alternatives and missing features"},s={id:"alternatives-and-missing-features",title:"Alternatives and missing features",description:"Non-features",source:"@site/docs/alternatives-and-missing-features.md",permalink:"/qaboard/docs/alternatives-and-missing-features",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/alternatives-and-missing-features.md",sidebar_label:"Alternatives",sidebar:"docs",previous:{title:"QA-Board is a platform for algorithms R&D",permalink:"/qaboard/docs/introduction"},next:{title:"Installing QA-Board's CLI",permalink:"/qaboard/docs/installation"}},l=[{value:"Non-features",id:"non-features",children:[]},{value:"Some planned features",id:"some-planned-features",children:[]},{value:"Why not use X instead?",id:"why-not-use-x-instead",children:[]}],c={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"non-features"},"Non-features"),Object(o.b)("p",null,"QA-Board works with other tools. It won't replace or provide:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Automation:")," we're not a CI tool, and won't provide logic needed to create build pipelines, or decide when to run what. In a CI system, QA-Board is just a standard executable, ",Object(o.b)("inlineCode",{parentName:"li"},"qa"),". If you're looking for a CI plaform, consider ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.gitlab.com/ee/ci/"}),"GitlabCI")," or ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/drone/drone"}),"DroneCI"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Execution Environment:")," if you need containers, install the QA-Board CLI as a dependency, or implement the logic needed within your code. As of now, the only help QA-Board gives is support for ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://direnv.net/"}),Object(o.b)("em",{parentName:"a"},".envrc")," files"),". Implementing more types of ",Object(o.b)("inlineCode",{parentName:"li"},"qa batch"),' "runners" might fill the gap here.'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Monitoring & Deployement"),": in this space solutions tend to be custom of industry specific. Get in touch if you see low-hanging fruits!"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Data Versionning"))),Object(o.b)("h2",{id:"some-planned-features"},"Some planned features"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Pipelines / DAG"),", needed for calibration/training->evaluation pipelines. ",Object(o.b)("em",{parentName:"li"},"But stay tuned, we're working on that!")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"1 vs N comparaisons")," versus only pairs of versions."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"More Viewers"),": ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://vega.github.io/vega/"}),"vega/altair"),", links to open with notebooks, ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/facebookresearch/visdom"}),"visdom"),", ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://webviz.io/"}),"webiz"),"..."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Users")," for login, and commenting on results.\nWe also plan to introduct a number of smaller features")),Object(o.b)("h2",{id:"why-not-use-x-instead"},"Why not use X instead?"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Most comparable tools focus on ",Object(o.b)("strong",{parentName:"li"},"training for machine learning")," (",Object(o.b)("inlineCode",{parentName:"li"},"sacred"),", ",Object(o.b)("inlineCode",{parentName:"li"},"nni"),", ",Object(o.b)("inlineCode",{parentName:"li"},"mlflow"),", ",Object(o.b)("inlineCode",{parentName:"li"},"tensorboard"),", ",Object(o.b)("inlineCode",{parentName:"li"},"polyaxon"),"...). Our use cases revolve around qualitative outputs for a wide range of algorithms. It means we ",Object(o.b)("em",{parentName:"li"},"need")," flexible visualizations. This said, those tools are great too! They often have features that QA-Board is still missing (labelling and commenting outputs, better GUI in some respects). Many of the commercial solutions (",Object(o.b)("inlineCode",{parentName:"li"},"cometML"),", ",Object(o.b)("inlineCode",{parentName:"li"},"convrg.io"),", ",Object(o.b)("inlineCode",{parentName:"li"},"netpune.ai"),"...) can provide a lot of value too, depending on your use-case  and the size/maturity of your organization."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Notebooks")," are amazing for experimentation and r&d reporting, but are not easy to compare and manage. "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.tensorflow.org/tensorboard"}),Object(o.b)("inlineCode",{parentName:"a"},"tensorboard"))," has a lot of qualities, but it doesn't scale to many experiments, doesn't know about ",Object(o.b)("inlineCode",{parentName:"li"},"git"),', and is not persistent. We may integrate an "Open in Tensorboard" button, ask about it and stay tuned. As for ',Object(o.b)("inlineCode",{parentName:"li"},"visdom"),", it's great for experimenting, less to store historical information.")))}b.isMDXComponent=!0},183:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return n?r.a.createElement(m,s(s({ref:t},c),{},{components:n})):r.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);