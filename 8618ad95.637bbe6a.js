(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{118:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),p=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(n),b=a,m=l["".concat(c,".").concat(b)]||l[b]||d[b]||i;return n?r.a.createElement(m,o(o({ref:t},u),{},{components:n})):r.a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var u=2;u<i;u++)c[u]=n[u];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(118)),c={id:"apis",sidebar_label:"APIs",title:"QA-Board's API"},o={unversionedId:"apis",id:"apis",isDocsHomePage:!1,title:"QA-Board's API",description:"CLI API",source:"@site/docs/integrating-qa-in-scripts.md",permalink:"/qaboard/docs/apis",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/integrating-qa-in-scripts.md",sidebar_label:"APIs",sidebar:"docs",previous:{title:"Using input metadata and integrating with external databases",permalink:"/qaboard/docs/metadata-integration-external-databases"},next:{title:"Various Tuning Workflows",permalink:"/qaboard/docs/tuning-workflows"}},s=[{value:"CLI API",id:"cli-api",children:[]},{value:"HTTP API",id:"http-api",children:[]}],u={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"cli-api"},"CLI API"),Object(i.b)("p",null,"If you run batches, it can be useful to know where results where saved."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'qa batch my-batch \u2013-list-output-dirs\n##=> prints to STDOUT each output directory on a line\n#> $some/where/place\n#> $some/other/place\n#> ...\n\nqa batch my-batch \u2013-list\n##=> prints to STDOUT an array with info on each run\n# [\n#   {\n#      "absolute_input_path": "some/file"\n#      "configurations": ["my-config"],\n#      "output_directory": "some/place"\n#   }\n# ]\n')),Object(i.b)("p",null,"For specific needs, you can also use ",Object(i.b)("inlineCode",{parentName:"p"},"qa get")," to output internal variables:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"qa --input my/input get output_directory\nqa get commit_id\n# etc\n")),Object(i.b)("h2",{id:"http-api"},"HTTP API"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"TODO:")," Formalize with an ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://editor.swagger.io/"}),"openapi/swagger spec"),".")),Object(i.b)("p",null,"It's not documented yet, but quite stable and there are no surprises."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -k "https://qa/api/v1/commits?project=my/project"\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'[\n  // --snip--\n  {\n    "id": "af9370b9246657e74e8e7fbd28c180b5cca7d3a7",\n    "type": "git",\n    "branch": "origin/my-branch",\n    "parents": [\n      "c976adc9020683f90d51d25c39d9e177c621dc95"\n    ],\n    "message": "add dynamic min subtract\\n",\n    "committer_name": "Rivka E",\n    "committer_avatar_url": "http://gitlab-srv/uploads/-/system/user/avatar/164/avatar.png",\n    "authored_datetime": "2019-04-30T09:05:09+00:00",\n    "authored_date": "2019-04-30",\n    "data": null,\n    "repo_artifacts_url": "/s/commit/dir/url",\n    "artifacts_url": "/s/commit/dir/url/maybe/subproject", //placeholder...\n    "batches": {\n      "default": {\n        "id": 19172,\n        "commit_id": "af9370b9246657e74e8e7fbd28c180b5cca7d3a7",\n        "label": "default",\n        "created_date": "2019-04-30T09:08:59.962664",\n        "data": {\n          "type": "ci"\n        },\n        "batch_dir_url": "/s/some/directory/output",\n        "aggregated_metrics": {},\n        "valid_outputs": 0,\n        "pending_outputs": 0,\n        "running_outputs": 0,\n        "failed_outputs": 2\n      }\n    },\n    "time_of_last_batch": "2019-04-30T09:05:09+00:00"\n  },\n  // --snip--\n]\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -k "$base_url/commit/01c27dfc4ffbf93ce95639b4dfbc126da4c53053?project=my/project" | jq\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "id": "2032a39564281de429e667260d1def3d16980e01",\n  "type": "git",\n  "branch": "origin/InvestigateCompression",\n  "parents": [\n    "93b0a95d0ceaa78d24be33bea67a4aa333491c23"\n  ],\n  "message": "1. PARAMETERIZE compression\\n2. add XX package\\n",\n  "committer_name": "Rivka E",\n  "committer_avatar_url": "http://gitlab-srv/uploads/-/system/user/avatar/164/avatar.png",\n  "authored_datetime": "2019-04-28T12:55:51+00:00",\n  "authored_date": "2019-04-28",\n  "data": {\n    "qatools_config": {\n      // --snip\n     },\n    "qatools_metrics": {\n      // --snip\n     }\n  }\n  "repo_artifacts_url": "/s/commit/dir/url",\n  "artifacts_url": "/s/commit/dir/url/maybe/subproject", //placeholder...\n  "batches": {\n    "default": {\n      "id": 19071,\n      "commit_id": "2032a39564281de429e667260d1def3d16980e01",\n      "label": "default",\n      "created_date": "2019-04-28T13:27:28.119816",\n      "data": {\n        "type": "ci"\n      },\n      "batch_dir_url": "/s/some/directory/output",\n      "aggregated_metrics": {},\n      "valid_outputs": 1,\n      "pending_outputs": 2,\n      "running_outputs": 1,\n      "failed_outputs": 2,\n      "outputs": {\n        "350582": {\n          "id": 350582,\n          "output_type": "",\n          "platform": "windows",\n          "configuration": "base_XXX",\n          "extra_parameters": {},\n          "metrics": {\n            "is_failed": false,\n            "compute_time": 30.1366302967\n            "OTP_size_CrossTalk": 1040,\n            "OTP_size_DayLight50": 464,\n            // --snip\n          },\n          "is_failed": false,\n          "is_pending": false,\n          "is_running": false,\n          "data": {\n            "ci": true\n          },\n          "batch_dir_url": "/s/some/directory/output",\n          "test_input_database": "/db/XX",\n          "test_input_path": "LSC/M01",\n          "test_input_tags": []\n        },\n        // --snip--\n      }\n    }\n  },\n  "time_of_last_batch": "2019-04-28T12:55:51+00:00"\n}\n\n')))}p.isMDXComponent=!0}}]);