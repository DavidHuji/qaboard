(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{159:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var a=t(1),r=t(9),i=(t(0),t(184)),o={id:"dag-pipelines",title:"Defining Pipelines / DAG",sidebar_label:"Defining Pipelines / DAG"},c={id:"dag-pipelines",title:"Defining Pipelines / DAG",description:":::caution Work-In-Progress\r",source:"@site/docs/dag-pipelines.md",permalink:"/qaboard/docs/dag-pipelines",sidebar_label:"Defining Pipelines / DAG",sidebar:"docs",previous:{title:"Deleting Old Outputs and Artifacts",permalink:"/qaboard/docs/deleting-old-data"},next:{title:"Frequently Asked Questions",permalink:"/qaboard/docs/faq"}},l=[],s={rightToc:l};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Work-In-Progress")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Nothing here is implemented currently, it's at the API design stage."))),Object(i.b)("p",null,"Currently QA-Board lacks expressivity for the common use-case of:\n1. Run CDE on some images\n2. Calibration\n3. Validation"),Object(i.b)("p",null,"Likewise, it can\u2019t handle nicely machine learning workflows (training/validation)."),Object(i.b)("p",null,"Below are two workarounds people have used until now, and a proposition for built-in support in QA-Board."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Can you send me feedback / alternative ideas, or share to relevant people? Especially if you have experience with various flow engines, e.g. DVC. Thanks!"),Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"The goal is a solution that is simple, expressive, and enables caching."))),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Run qa batch multiple times, with each run expecting that results of the previous run are available (as done with @rivka, @ToF).\na. (+) Rather easy to do\nb. (-) The logic is outside QA-Board \u2013 it can\u2019t easily be used for tuning from the web UI \uf04b"),Object(i.b)("li",{parentName:"ol"},'Create a "meta" run, with a heavy run() function that itself takes care of everything  (as done with @eliav)\na. (+) Easy to do\nb. (-) But very custom and not easy to use\nc. (-) There many tricky corners (running locally, filesystem issues on LSF) that should not be the  engineer\u2019s concern.'),Object(i.b)("li",{parentName:"ol"},'"Built-in support" by QA-Board.\nOne possible way we could do it is by extending the syntax used to defined batches with a ',Object(i.b)("inlineCode",{parentName:"li"},"depends:"),"/ ",Object(i.b)("inlineCode",{parentName:"li"},"needs:")," keyword:")),Object(i.b)("p",null,"Simple example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'batch1:\n  inputs:\n  - A.jpg\n  - B.jpg\n  configurations:\n  - base\n\nbatch2:\n  depends: batch1\n  type: script\n  configurations:\n  - python my_script.py {o.output_dir for o in depends["batch1"]}\n\n# ? there is not really an "input" for a script, especially if it uses "depends"\n# ? if we depend on something I guess we could do without input, provide None...\n')),Object(i.b)("p",null,'"Real-world" example:'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"my-calibration-images:\n    configurations:\n    - base\n    inputs:\n    - DL50.raw\n    - DL55.raw\n    - DL65.raw\n    - DL75.raw\n\nmy-calibration:\n    depends:\n      calibration_images: my-calibration-images\n    type: script\n    configurations:\n    - python calibration.py ${o.output_directory for o in depends[calibration_images]}\n\nmy-evaluation-batch:\n    depends:\n      calibration: my-calibration\n    inputs:\n    - test_image_1.raw\n    - test_image_2.raw\n    - test_image_3.raw\n    configurations:\n    - base\n    - ${depends[calibration].output_directory}/calibration.cde\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ qa batch my-evaluation-batch\n#=> qa batch my-calibration-images\n#=> qa batch my-calibration\n#=> qa batch my-evaluation-batch\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"(+) simple for users (I think so?)"),Object(i.b)("li",{parentName:"ul"},"(+) caching for free"),Object(i.b)("li",{parentName:"ul"},"(?) need to define a clear API: how each job can lookup results of earlier jobs\u2026 And likely we will need naming-conventions for parameter tuning\u2026")))}p.isMDXComponent=!0},184:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},b=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(t),d=a,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return t?r.a.createElement(m,c({ref:n},s,{components:t})):r.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);