"use strict";(self.webpackChunkApache_2_0=self.webpackChunkApache_2_0||[]).push([[2348],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return p}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=l(r),p=o,m=f["".concat(c,".").concat(p)]||f[p]||d[p]||i;return r?n.createElement(m,a(a({ref:t},s),{},{components:r})):n.createElement(m,a({ref:t},s))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3799:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=r(4996),u=["components"],c={id:"tuning-from-the-webapp",sidebar_label:"Tuning from QA-Board",title:"Starting tuning experiments from QA-Board"},l=void 0,s={unversionedId:"tuning-from-the-webapp",id:"tuning-from-the-webapp",title:"Starting tuning experiments from QA-Board",description:"How to do tuning or trigger extra runs from QA-Board",source:"@site/docs/tuning-from-the-webapp.md",sourceDirName:".",slug:"/tuning-from-the-webapp",permalink:"/qaboard/docs/tuning-from-the-webapp",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/docs/tuning-from-the-webapp.md",tags:[],version:"current",frontMatter:{id:"tuning-from-the-webapp",sidebar_label:"Tuning from QA-Board",title:"Starting tuning experiments from QA-Board"},sidebar:"docs",previous:{title:"References & Milestones",permalink:"/qaboard/docs/references-and-milestones"},next:{title:"Local Multiprocessing",permalink:"/qaboard/docs/local-multiprocessing"}},d=[{value:"How to do tuning or trigger extra runs from QA-Board",id:"how-to-do-tuning-or-trigger-extra-runs-from-qa-board",children:[],level:2},{value:"Enabling tuning from QA-Board",id:"enabling-tuning-from-qa-board",children:[{value:"1. Build artifacts",id:"1-build-artifacts",children:[],level:3},{value:"2. Distributed task queue",id:"2-distributed-task-queue",children:[],level:3}],level:2}],f={toc:d};function p(e){var t=e.components,r=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"how-to-do-tuning-or-trigger-extra-runs-from-qa-board"},"How to do tuning or trigger extra runs from QA-Board"),(0,i.kt)("p",null,"When doing QA or during development, you often want to run the code/configs from a given commit on new tests. QA-Board lets you define and runs batches of tests with extra tuning parameters:"),(0,i.kt)("img",{alt:"Tuning from the UI",src:(0,a.Z)("img/tuning-from-the-ui.jpg")}),(0,i.kt)("h2",{id:"enabling-tuning-from-qa-board"},"Enabling tuning from QA-Board"),(0,i.kt)("h3",{id:"1-build-artifacts"},"1. Build artifacts"),(0,i.kt)("p",null,"You must have defined and be using ",(0,i.kt)("a",{parentName:"p",href:"artifacts"},"artifacts")),(0,i.kt)("h3",{id:"2-distributed-task-queue"},"2. Distributed task queue"),(0,i.kt)("p",null,"You need to configure a task runner, that will execute tuning runs asynchronously. We recommend getting started with Celery. All the details are on the ",(0,i.kt)("a",{parentName:"p",href:"celery-integration"},"next page"),"!"))}p.isMDXComponent=!0}}]);