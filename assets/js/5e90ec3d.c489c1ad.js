"use strict";(self.webpackChunkApache_2_0=self.webpackChunkApache_2_0||[]).push([[4209],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return c}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},m=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=s(a),c=r,g=d["".concat(p,".").concat(c)]||d[c]||u[c]||i;return a?n.createElement(g,l(l({ref:e},m),{},{components:a})):n.createElement(g,l({ref:e},m))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7526:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],o={id:"inputs",sidebar_label:"From Inputs to Outputs",title:"From Inputs to Outputs"},p=void 0,s={unversionedId:"inputs",id:"inputs",title:"From Inputs to Outputs",description:"What is a run?",source:"@site/docs/inputs.md",sourceDirName:".",slug:"/inputs",permalink:"/qaboard/docs/inputs",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/docs/inputs.md",tags:[],version:"current",frontMatter:{id:"inputs",sidebar_label:"From Inputs to Outputs",title:"From Inputs to Outputs"},sidebar:"docs",previous:{title:"Project Setup",permalink:"/qaboard/docs/project-init"},next:{title:"Running your code",permalink:"/qaboard/docs/running-your-code"}},m=[{value:"What is a run?",id:"what-is-a-run",children:[],level:2},{value:"How QA-Board looks for inputs",id:"how-qa-board-looks-for-inputs",children:[],level:2},{value:"Batches of inputs",id:"batches-of-inputs",children:[],level:2},{value:"<em>(Optional)</em> Identifying inputs",id:"optional-identifying-inputs",children:[],level:2},{value:"<em>(Advanced)</em> Handling multiple input types",id:"advanced-handling-multiple-input-types",children:[],level:2},{value:"<em>(Advanced)</em> Allowing duplicate batch names",id:"advanced-allowing-duplicate-batch-names",children:[],level:2}],u={toc:m};function d(t){var e=t.components,a=(0,r.Z)(t,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"what-is-a-run"},"What is a run?"),(0,i.kt)("p",null,"QA-Board will run:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"your code on ",(0,i.kt)("strong",{parentName:"li"},"inputs")," with a given ",(0,i.kt)("strong",{parentName:"li"},"configuration")),(0,i.kt)("li",{parentName:"ul"},"and expect ",(0,i.kt)("strong",{parentName:"li"},"outputs files")," along with ",(0,i.kt)("strong",{parentName:"li"},"metrics"),".")),(0,i.kt)("p",null,"Depending on your domain, those will be different. Here are some examples:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Domain"),(0,i.kt)("th",{parentName:"tr",align:null},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Configuration"),(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Metric"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Image processing")),(0,i.kt)("td",{parentName:"tr",align:null},"image"),(0,i.kt)("td",{parentName:"tr",align:null},"feature flag & params"),(0,i.kt)("td",{parentName:"tr",align:null},"transformed image, debug data..."),(0,i.kt)("td",{parentName:"tr",align:null},"SNR, sharpness, color accuracy...")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Cloud server choice")),(0,i.kt)("td",{parentName:"tr",align:null},"integration test"),(0,i.kt)("td",{parentName:"tr",align:null},"instance type"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"cost, throughput...")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Machine learning")),(0,i.kt)("td",{parentName:"tr",align:null},"database/sample"),(0,i.kt)("td",{parentName:"tr",align:null},"hyperparameters"),(0,i.kt)("td",{parentName:"tr",align:null},"convergence plots / individual results"),(0,i.kt)("td",{parentName:"tr",align:null},"loss")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Optimization research")),(0,i.kt)("td",{parentName:"tr",align:null},"problem"),(0,i.kt)("td",{parentName:"tr",align:null},"model type, solver"),(0,i.kt)("td",{parentName:"tr",align:null},"solution"),(0,i.kt)("td",{parentName:"tr",align:null},"cost, runtime...")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Software performance")),(0,i.kt)("td",{parentName:"tr",align:null},"unit test"),(0,i.kt)("td",{parentName:"tr",align:null},"feature flag, platform"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"perf")," recordings, benchmark histograms"),(0,i.kt)("td",{parentName:"tr",align:null},"runtime, memory, latency, IPC, throughput...")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Hardware/driver perf")),(0,i.kt)("td",{parentName:"tr",align:null},"hardware/unit-test"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/arthur-flam/sysbench-qaboard"},"sysbench config")),(0,i.kt)("td",{parentName:"tr",align:null},"latency histogram"),(0,i.kt)("td",{parentName:"tr",align:null},"ops/s, runtime...")))),(0,i.kt)("h2",{id:"how-qa-board-looks-for-inputs"},"How QA-Board looks for inputs"),(0,i.kt)("p",null,"To make things simple, QA-Board expects that your inputs are existing ",(0,i.kt)("strong",{parentName:"p"},"paths"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"It is also possible to use external databases not just files. Or use a list of unit tests...  If you need it, ",(0,i.kt)("a",{parentName:"p",href:"metadata-integration-external-databases"},"read this"),"."))),(0,i.kt)("p",null,"Try to run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"qa run --input /dev/random\n#=> it should invite you to run *your* code\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},'Relative paths will be searched relative to the "database". The default is ',(0,i.kt)("inlineCode",{parentName:"p"},"/")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"C://")," on Windows), and you can change it in ",(0,i.kt)("em",{parentName:"p"},"qaboard.yaml")," (",(0,i.kt)("inlineCode",{parentName:"p"},"inputs.database"),").  "))),(0,i.kt)("h2",{id:"batches-of-inputs"},"Batches of inputs"),(0,i.kt)("p",null,"To run on batches of multiple inputs, use ",(0,i.kt)("inlineCode",{parentName:"p"},"qa batch my-batch"),", where ",(0,i.kt)("strong",{parentName:"p"},"my-batch")," is defined in:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qa/batches.yaml (can be changed in qaboard.yaml via inputs.batches)"',title:'"qa/batches.yaml',"(can":!0,be:!0,changed:!0,in:!0,"qaboard.yaml":!0,via:!0,'inputs.batches)"':!0},"my-batch:\n inputs:\n   - images/A.jpg\n   - images/B.jpg\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"qa batch my-batch\n#=> qa run --input images/A.jpg\n#=> qa run --input images/B.jpg\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We'll cover ",(0,i.kt)("a",{parentName:"p",href:"batches-running-on-multiple-inputs"},"batches in more depth later"),". By default, batches run in parallel locally, but you can easily setup an async task queue like ",(0,i.kt)("a",{parentName:"p",href:"celery-integration"},"Celery")," (built-in support), LSF or ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Samsung/qaboard/wiki/Adding-new-runners"},"others"),"."))),(0,i.kt)("h2",{id:"optional-identifying-inputs"},(0,i.kt)("em",{parentName:"h2"},"(Optional)")," Identifying inputs"),(0,i.kt)("p",null,'You\'ll often want to do something like "run on all the images in a given folder". For that to work, you have to tell QA-Board how to identify those images as inputs.'),(0,i.kt)("p",null,"In ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Samsung/qaboard/blob/master/qaboard/sample_project/qaboard.yaml"},(0,i.kt)("em",{parentName:"a"},"qaboard.yaml"))," edit and ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs.globs")," with a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/glob.html"},"glob pattern"),". Here is an example where your inputs are ",(0,i.kt)("em",{parentName:"p"},".jpg")," images:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qaboard.yaml"',title:'"qaboard.yaml"'},"inputs:\n  globs: '*.jpg'\n")),(0,i.kt)("p",null,"When you do this, you no longer have to define an explicit list of input paths in your batches. You can instead use folders or even ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/glob.html"},"globs/wildcards")," (",(0,i.kt)("inlineCode",{parentName:"p"},"*"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"**"),"...):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qa/batches.yaml"',title:'"qa/batches.yaml"'},"my-batch:\n inputs:\n   - images\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To run on all the inputs found under ",(0,i.kt)("inlineCode",{parentName:"p"},"$database / $PATH")," you can simply use ",(0,i.kt)("inlineCode",{parentName:"p"},"qa batch $PATH"),"."))),(0,i.kt)("p",null,"You can give multiple patterns:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qaboard.yaml"',title:'"qaboard.yaml"'},"inputs:\n  globs:\n  - '*.jpg'\n  - '*.bmp'\n  - '*.dng'\n")),(0,i.kt)("p",null,"A common use case is identifying folders containing a file patching a pattern, for instance movies given a sequence of frames, ",(0,i.kt)("em",{parentName:"p"},"frame_000.jpg"),", ",(0,i.kt)("em",{parentName:"p"},"frame_001.jpg"),"... In this case you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"use_parent_folder"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{3} title="qaboard.yaml"',"{3}":!0,title:'"qaboard.yaml"'},"inputs:\n  globs: frame_000.jpg\n  use_parent_folder: true\n")),(0,i.kt)("h2",{id:"advanced-handling-multiple-input-types"},(0,i.kt)("em",{parentName:"h2"},"(Advanced)")," Handling multiple input types"),(0,i.kt)("p",null,"Big projects sometimes need to distinguish different types of inputs, which will be processed with a different logic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qaboard.yaml" {3-9}',title:'"qaboard.yaml"',"{3-9}":!0},"inputs:\n  types:\n    default: image\n    image:\n      globs: '*.raw'\n    movie:\n      globs: frame_000.jpg\n      use_parent_folder: true\n      # you can override the defaults per-type\n      database:\n        linux: /mnt/movies\n        windows: F://movies\n")),(0,i.kt)("p",null,"You can choose what type each batch is: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{7} title="qa/batches.yaml"',"{7}":!0,title:'"qa/batches.yaml"'},"my-images:\n  inputs:\n  - my/image.jpg\n\nmy-batch:\n  type: movie\n  inputs:\n  - folder/of/movies\n  - other/movies\n")),(0,i.kt)("p",null,"If needed, you can also specify the input type from the CLI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"qa batch my-imagess              # by default look for images\nqa --type movie batch my-movies  # here we look for movies\n")),(0,i.kt)("h2",{id:"advanced-allowing-duplicate-batch-names"},(0,i.kt)("em",{parentName:"h2"},"(Advanced)")," Allowing duplicate batch names"),(0,i.kt)("p",null,'In some of our projects, we have tons of subprojects, which all define the same "standard" batch name used in the CI. And sometimes, we also want to be able to run all of those batche at the same time, from the root project... To do it:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qaboard.yaml"',title:'"qaboard.yaml"'},"inputs:\n  batches: some/path/*/batches.yaml\n  allow_duplicate_batches: true\n")))}d.isMDXComponent=!0}}]);