"use strict";(self.webpackChunkApache_2_0=self.webpackChunkApache_2_0||[]).push([[2773],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),d=i,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return t?a.createElement(h,s(s({ref:n},p),{},{components:t})):a.createElement(h,s({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8744:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),s=["components"],o={id:"batches-running-on-multiple-inputs",title:"Batches of inputs",sidebar_label:"Batches of Inputs"},l=void 0,c={unversionedId:"batches-running-on-multiple-inputs",id:"batches-running-on-multiple-inputs",title:"Batches of inputs",description:"Make sure you read the section on input files",source:"@site/docs/batches-running-on-multiple-inputs.md",sourceDirName:".",slug:"/batches-running-on-multiple-inputs",permalink:"/qaboard/docs/batches-running-on-multiple-inputs",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/docs/batches-running-on-multiple-inputs.md",tags:[],version:"current",frontMatter:{id:"batches-running-on-multiple-inputs",title:"Batches of inputs",sidebar_label:"Batches of Inputs"},sidebar:"docs",previous:{title:"Visualizations",permalink:"/qaboard/docs/visualizations"},next:{title:"QA CLI Tips",permalink:"/qaboard/docs/using-the-qa-cli"}},p=[{value:"Setting a custom database",id:"setting-a-custom-database",children:[],level:2},{value:"Setting a custom database per batch",id:"setting-a-custom-database-per-batch",children:[],level:2},{value:"Specifying test configurations",id:"specifying-test-configurations",children:[],level:2},{value:"Matrix batches",id:"matrix-batches",children:[{value:"Interpolation",id:"interpolation",children:[],level:3}],level:2},{value:"Aliases for groups of batches",id:"aliases-for-groups-of-batches",children:[],level:2},{value:"YAML anchors and aliases",id:"yaml-anchors-and-aliases",children:[{value:"Reusable configurations/inputs",id:"reusable-configurationsinputs",children:[],level:3}],level:2}],u={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Reminder")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Make sure you read ",(0,r.kt)("a",{parentName:"p",href:"inputs"},"the section on input files")))),(0,r.kt)("p",null,"As we discussed, you can define batches of inputs in file(s) whose paths are given by ",(0,r.kt)("inlineCode",{parentName:"p"},"inputs.batches")," in your ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Samsung/qaboard/blob/master/qaboard/sample_project/qaboard.yaml#L25"},"qaboard.yaml")," configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qa/batches.yaml (default)"',title:'"qa/batches.yaml','(default)"':!0},"my-batch:\n inputs:\n   - A.jpg\n   - B.jpg\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"qa batch my-batch\n#=> qa run --input A.jpg\n#=> qa run --input B.jpg\n\nqa batch --batch first-batch --batch second-batch\n")),(0,r.kt)("h2",{id:"setting-a-custom-database"},"Setting a custom database"),(0,r.kt)("p",null,"You can set a default database for all the batches in define in each file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"database: /some/path\n\nmy-batch:\n  inputs: # will be relative to the database\n  - Images/Demo3/A.jpg\n  - Images/Demo2\n")),(0,r.kt)("h2",{id:"setting-a-custom-database-per-batch"},"Setting a custom database per batch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{2-4}","{2-4}":!0},"you-can-override-the-default-database:\n  database:\n    linux: /mnt/database\n    windows: '\\\\\\\\storage\\\\database'\n  inputs:\n  - Images/Demo3/A.jpg\n  - Images/Demo2\n")),(0,r.kt)("h2",{id:"specifying-test-configurations"},"Specifying test configurations"),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Reminder")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Make sure you read ",(0,r.kt)("a",{parentName:"p",href:"specifying-configurations"},"the section on configurations")))),(0,r.kt)("p",null,"Let's look at examples from one of Samsung's projects to illustrate how configurations can be given. In short, each image is processed by a tool named \"CDE\". We need to feed it config files and CLI arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{2-3}","{2-3}":!0},'using-a-custom-configuration:\n  configs:\n  - base\n  inputs:\n  - Bayer/A.dng\n  - Bayer/B.dng\n# => configs == ["base"]\n# => the code would load base/config.cde\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{2-4}","{2-4}":!0},'multiple-configs:\n  configs:\n    - base\n    - low-light\n  inputs:\n  - Bayer/A.dng\n  - Bayer/B.dng\n#=> configs == ["base", "low-light"]\n#=> we merge 2 CDE configs \n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{2-8}","{2-8}":!0},'configs-can-be-complex-objects:\n  configs:\n    - base\n    - low-light\n    - cde:\n      - "-w 9920"\n      - "-h 2448"\n      - "-it BAYER10"\n  inputs:\n  - Bayer/A.dng\n  - Bayer/B.dng\n# configs == ["base", "low-light", {"cde": ["-w 9920", "-h 2448", "-it BAYER10"]}]\n# => Here we use the "cde" config parameter to pass CLI arguments to CDE.\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{5,7-10}","{5,7-10}":!0},'each-input-can-have-its-own-configuration:\n  configs:\n    - base\n  inputs:\n  - Bayer/A.dng:\n    #=> configs == ["base"]\n  - Bayer/B.dng:\n      - low-light\n      - cde:\n        - "-DD"\n    #=> configs == ["base", "low-light", {"cde": ["-DD"]}]\n\n\neach-input-can-have-its-own-configuration-and-appear-twice:\n  configurations:\n    - base\n  inputs:\n  - a.txt: {crop: A}\n    #=> configurations == ["base", {"crop": ["A"]}]\n  - a.txt: {crop: B}\n    #=> configurations == ["base", {"crop": ["B"]}]\n  - [a.txt, {crop: C}]\n    #=> configurations == ["base", {"crop": ["C"]}]\n')),(0,r.kt)("h2",{id:"matrix-batches"},"Matrix batches"),(0,r.kt)("p",null,'You can use "matrix" batches to run on combinations of configurations (and platfornms):'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4-10}","{4-10}":!0},"multiple-configs:\n  inputs:\n  - a.raw\n  matrix:\n    configs:\n      -\n          - base\n          - tuning\n      -\n          - base\n\n#=> `qa batch multiple-configs` will run\n#   with [base, tuning] and [base]\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Per-input extra configurations still work."),(0,r.kt)("p",{parentName:"blockquote"},"The syntax was inspired from ",(0,r.kt)("a",{parentName:"p",href:"https://0-8-0.docs.drone.io/matrix-builds/"},"DroneCI"),", ",(0,r.kt)("a",{parentName:"p",href:"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategy"},"GithubActions"),", ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=example%2Cparameter-schema#matrix"},"AzurePipelines"),".")),(0,r.kt)("h3",{id:"interpolation"},"Interpolation"),(0,r.kt)("p",null,"Matrix variables are interpolated using the ",(0,r.kt)("inlineCode",{parentName:"p"},"${matrix.variable}")," syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"my-batch-multiple-configs:\n  inputs:\n  - image.raw\n  matrix:\n    version: [1, 2]\n  configs:\n    - base-v${matrix.version}\n\n# => will run with [base-v1] and [base-v2]\n")),(0,r.kt)("p",null,"And elaborate complex testing strategies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'my-batch-multiple-values:\n  inputs:\n  - image.raw\n  matrix:\n    threshold: [1, 2, 3, 4]\n    mode: ["a", "b"]\n  configs:\n    - base\n    - block.threshold: ${matrix.threshold}\n    - block.mode: ${matrix.mode}\n\n# => will start 8 runs run with\n#     [base, block.threshold: 1, block.mode: a\n#     [base, block.threshold: 1, block.mode: b\n#     [base, block.threshold: 2, block.mode: a\n#     etc\n')),(0,r.kt)("p",null,"Advanced users can use indexing: ",(0,r.kt)("inlineCode",{parentName:"p"},"${matrix.param[0]}")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"${matrix.param[key]}")," according to the python ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/string.html#formatspec"},"formatting miniformat"),', if they use "complex" matrix parameters with objects/arrays/strings:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'my-batch-matrix-object:\n  inputs:\n  - image.raw\n  matrix:\n    point: [\n      {x: 10, y: 40},\n      {x: 20, y: 50},\n    ]\n  configs:\n    - base\n    - flags: "-x=${matrix.point[x]} -y=${matrix.point[y]}"\n')),(0,r.kt)("h2",{id:"aliases-for-groups-of-batches"},"Aliases for groups of batches"),(0,r.kt)("p",null,"For convenience you can define aliases for batches you often run together. For instance you can do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="qa/batches.yaml"',title:'"qa/batches.yaml"'},"aliases:\n  two-batches:\n  - first-batch\n  - second-batch\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"qa batch two-batches\n")),(0,r.kt)("h2",{id:"yaml-anchors-and-aliases"},"YAML anchors and aliases"),(0,r.kt)("p",null,"For convenience you can define YAML anchors for common configurations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-3,7}","{1-3,7}":!0},'.base: &base\n  - base\n  - partial\n\nhdr:\n  configs:\n    - *base\n    - hdr\n  inputs:\n    - A\n    - B\n    - C\n#=> configs == ["base", "partial", "hdr"]\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},'YAML "aliases" and "anchors" are standard YAML feature. ',(0,r.kt)("a",{parentName:"p",href:"https://confluence.atlassian.com/bitbucket/yaml-anchors-960154027.html"},"Read more here"),"."))),(0,r.kt)("h3",{id:"reusable-configurationsinputs"},"Reusable configurations/inputs"),(0,r.kt)("p",null,"Sometimes you want to mix and match reusabe definitions of configs and inputs. YAML anchors let you do it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},".inputs_hdr: &inputs_hdr\n  inputs:\n    - A\n    - B\n\n.lots_of_inputs_hdr: &lots_inputs_hdr\n  inputs:\n    - A\n    - B\n    - C\n    - D\n    - E\n    - F\n\n.HDR: &HDR\n  configs:\n    - *base\n    - hdr_base\n    - hdr_motion\n\n.HDR-disabled: &HDR-disabled\n  configs:\n    - *base\n\nhdr:\n  <<: *HDR\n  <<: *inputs_hdr\nno-hdr:\n  <<: *HDR-disabled\n  <<: *inputs_hdr\n# qa --batch-label hdr    batch hdr\n# qa --batch-label no-hdr batch no-hdr\n\n# Maybe on nightly runs you want to run lots of inputs\nlots-of-hdr-inputs:\n  <<: *HDR\n  <<: *lots_inputs_hdr\nlots-of-no-hdr-inputs:\n  <<: *HDR-disabled\n  <<: *lots_inputs_hdr\n")))}m.isMDXComponent=!0}}]);