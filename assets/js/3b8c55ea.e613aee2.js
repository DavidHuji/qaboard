"use strict";(self.webpackChunkApache_2_0=self.webpackChunkApache_2_0||[]).push([[3217],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9250:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"installation",title:"Installing QA-Board's client",sidebar_label:"Client Installation"},c=void 0,s={unversionedId:"installation",id:"installation",title:"Installing QA-Board's client",description:"You need to install QA-Board's CLI client: qa. It wraps and runs your code.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/qaboard/docs/installation",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/docs/installation.md",tags:[],version:"current",frontMatter:{id:"installation",title:"Installing QA-Board's client",sidebar_label:"Client Installation"},sidebar:"docs",previous:{title:"Server Bringup",permalink:"/qaboard/docs/deploy"},next:{title:"Project Setup",permalink:"/qaboard/docs/project-init"}},u=[{value:"Connecting to a custom QA-Board server",id:"connecting-to-a-custom-qa-board-server",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You need to install QA-Board's CLI client: ",(0,o.kt)("inlineCode",{parentName:"p"},"qa"),". It wraps and runs your code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install --upgrade qaboard\n")),(0,o.kt)("p",null,"To make sure the installation was successful, try printing a list of ",(0,o.kt)("inlineCode",{parentName:"p"},"qa"),"'s CLI commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"qa --help\n\n# If you get errors about not using a utf8 locale, you can likely: \n#   export LC_ALL=C.utf8 LANG=C.utf8\n")),(0,o.kt)("h2",{id:"connecting-to-a-custom-qa-board-server"},"Connecting to a custom QA-Board server"),(0,o.kt)("p",null,"By default ",(0,o.kt)("inlineCode",{parentName:"p"},"qa")," tries to use a QA-Board server running locally (it assumes you used the default config)."),(0,o.kt)("p",null,"If you connect to a remote QA-Board server, you'll need to set those environment variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export QABOARD_HOST=my-server:5151\nexport QABOARD_PROTOCOL=http\n")))}d.isMDXComponent=!0}}]);